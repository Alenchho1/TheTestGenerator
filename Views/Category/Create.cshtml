@model TestGenerator.Models.Category

@{
    ViewData["Title"] = "Нова категория";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h2 class="h5 mb-0"><i class="bi bi-folder-plus"></i> Създаване на нова категория</h2>
            </div>
            <div class="card-body">
                <form id="createCategoryForm" method="post" novalidate>
                    @Html.AntiForgeryToken()
                    
                    <div class="mb-3">
                        <label for="Name" class="form-label">Име на категорията</label>
                        <input type="text" name="Name" class="form-control" required
                               minlength="2" maxlength="100"
                               title="Името трябва да бъде между 2 и 100 символа" />
                    </div>

                    <div class="mb-3">
                        <label for="Description" class="form-label">Описание</label>
                        <textarea name="Description" class="form-control" rows="3"
                                  maxlength="500"
                                  title="Описанието не може да бъде по-дълго от 500 символа"></textarea>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Назад
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Създай категория
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('createCategoryForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            var form = this;
            var formData = new FormData(form);
            
            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>
} 